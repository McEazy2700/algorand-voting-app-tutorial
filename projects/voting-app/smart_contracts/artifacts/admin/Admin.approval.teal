#pragma version 10
#pragma typetrack false

// smart_contracts.admin.contract.Admin.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 1 0
    bytecblock "global_admin"
    txn ApplicationID
    bnz main_after_if_else@2
    // smart_contracts/admin/contract.py:9
    // self.global_admin = GlobalState(Account(Txn.sender.bytes))
    bytec_0 // "global_admin"
    txn Sender
    app_global_put

main_after_if_else@2:
    // smart_contracts/admin/contract.py:7
    // class Admin(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@8
    pushbytess 0xa0e81872 0x24378d3c 0x02bece11 // method "update()void", method "delete()void", method "hello(string)string"
    txna ApplicationArgs 0
    match main_update_route@5 main_delete_route@6 main_hello_route@7

main_after_if_else@10:
    // smart_contracts/admin/contract.py:7
    // class Admin(ARC4Contract):
    intc_1 // 0
    return

main_hello_route@7:
    // smart_contracts/admin/contract.py:23
    // @abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // smart_contracts/admin/contract.py:7
    // class Admin(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // smart_contracts/admin/contract.py:23
    // @abimethod()
    callsub hello
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_delete_route@6:
    // smart_contracts/admin/contract.py:17
    // @abimethod(allow_actions=["DeleteApplication"])
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    assert // OnCompletion is not DeleteApplication
    txn ApplicationID
    assert // can only call when not creating
    callsub delete
    intc_0 // 1
    return

main_update_route@5:
    // smart_contracts/admin/contract.py:11
    // @abimethod(allow_actions=["UpdateApplication"])
    txn OnCompletion
    pushint 4 // UpdateApplication
    ==
    assert // OnCompletion is not UpdateApplication
    txn ApplicationID
    assert // can only call when not creating
    callsub update
    intc_0 // 1
    return

main_bare_routing@8:
    // smart_contracts/admin/contract.py:7
    // class Admin(ARC4Contract):
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return


// smart_contracts.admin.contract.Admin.update() -> void:
update:
    // smart_contracts/admin/contract.py:13
    // assert Txn.sender == self.global_admin.get(
    txn Sender
    // smart_contracts/admin/contract.py:14
    // Account()
    global ZeroAddress
    // smart_contracts/admin/contract.py:13
    // assert Txn.sender == self.global_admin.get(
    intc_1 // 0
    bytec_0 // "global_admin"
    app_global_get_ex
    // smart_contracts/admin/contract.py:13-15
    // assert Txn.sender == self.global_admin.get(
    //     Account()
    // ), ERROR_MESSAGES.UNAUTHORIZED
    select
    ==
    assert // Unathorized! You do not have permissions to perform this action.
    retsub


// smart_contracts.admin.contract.Admin.delete() -> void:
delete:
    // smart_contracts/admin/contract.py:19
    // assert Txn.sender == self.global_admin.get(
    txn Sender
    // smart_contracts/admin/contract.py:20
    // Account()
    global ZeroAddress
    // smart_contracts/admin/contract.py:19
    // assert Txn.sender == self.global_admin.get(
    intc_1 // 0
    bytec_0 // "global_admin"
    app_global_get_ex
    // smart_contracts/admin/contract.py:19-21
    // assert Txn.sender == self.global_admin.get(
    //     Account()
    // ), ERROR_MESSAGES.UNAUTHORIZED
    select
    ==
    assert // Unathorized! You do not have permissions to perform this action.
    retsub


// smart_contracts.admin.contract.Admin.hello(name: bytes) -> bytes:
hello:
    // smart_contracts/admin/contract.py:23-24
    // @abimethod()
    // def hello(self, name: String) -> String:
    proto 1 1
    // smart_contracts/admin/contract.py:25
    // return "Hello, " + name
    pushbytes "Hello, "
    frame_dig -1
    concat
    retsub
